@model Payroll_Mvc.Employee

@{
    ViewBag.Title = "signup";
}

<h2>signup</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.User_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User_id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User_Name, "", new { @class = "text-danger" })
            </div>
        </div>

      @*  <div class="form-group">
            @Html.LabelFor(model => model.Joined_On, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Joined_On, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Joined_On, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" style=" background-color:cornflowerblue" />
                <a href="~/Login/LoginEmp/" class="btn btn-default" style=" background-color:cornflowerblue">Back</a>
            </div>
        </div>
    </div>
}
@{ try
    {
        if (ViewBag.msg != null)
        {
            string n = ViewBag.msg;
            if (n.Contains("Successfully!"))
            {
                <script>
                    swal("Sign In successfully!", "You clicked the button!", "success");
                </script>
            }
            else
            {
                <script>
                    swal("Fail to signup!", "You clicked the button!", "error");
                </script>
            }
        }
    }
    catch
    {

    }
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
